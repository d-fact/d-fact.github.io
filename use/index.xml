<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Usage on Differential Facts</title><link>https://d-fact.github.io/factbase-site/use/</link><description>Recent content in Usage on Differential Facts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://d-fact.github.io/factbase-site/use/index.xml" rel="self" type="application/rss+xml"/><item><title>Facts Helper</title><link>https://d-fact.github.io/factbase-site/use/factsutil/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://d-fact.github.io/factbase-site/use/factsutil/</guid><description>Python scripts are developed as helpers for running various experiments using facts. They can be browsed here, or you have had them if you have cloned Modified CSlicer.
Usage Before using, change BASE_DIR in factutils/hislicing/env_const.py to the local path of CSlicer.
Install in the virtual env % python3 -m venv &amp;lt;DIR&amp;gt; % source &amp;lt;DIR&amp;gt;/bin/activate # install in the same pth of setup.py % pip3 install -e .</description></item><item><title>Modified CSlicer</title><link>https://d-fact.github.io/factbase-site/use/cslicer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://d-fact.github.io/factbase-site/use/cslicer/</guid><description>Some of our extractors are developed based upon the existing codebase of CSlicer.
Build from source Clone the repo. Shallow clone of the specific branch for saving time is recommended.
git clone --depth 1 https://bitbucket.org/liyistc/gitslice.git -b facts Checkout to the facts branch.
If you use the command in step.1, you should already in this branch.
Clone submodules.</description></item><item><title>C/C++ Atomic Changes</title><link>https://d-fact.github.io/factbase-site/use/gumtree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://d-fact.github.io/factbase-site/use/gumtree/</guid><description>See github/d-fact/gumtree.
Use AST from clang instead of cgum A parser, named cgum, is used in GumTree to generate AST in XML for C programs. For facts interoperability, we use AST generated by Clang instead of cgum&amp;#39;s. Changes to GumTree New TAFormatter extends ActionFormatter, output atomic changes as facts in TA format.
Use our AST emitter based on Clang instead of cgum/srcml for C/C++.</description></item></channel></rss>